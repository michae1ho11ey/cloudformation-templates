AWSTemplateFormatVersion: 2010-09-09
Description: Vanilla VPC with a public and private subnet and appropriate gateways and security groups

Parameters:
  VPCCidr:
    Type: String
    Default: 10.0.0.1/16
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$
  PublicCidr:
    Type: String
    Default: 10.0.1.1/24
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$
  PrivateCidr:
    Type: String
    Default: 10.0.2.1/24
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$


Resources:
  MasterVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        -
          Key: user
          Value: michael.holley

## Subnet Definitions ##
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PublicCidr
      VpcId: !Ref MasterVPC
      Tags:
        -
          Key: user
          Value: michael.holley
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PrivateCidr
      VpcId: !Ref MasterVPC
      Tags:
        -
          Key: user
          Value: michael.holley

## Gateway Definitions ##
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        -
          Key: user
          Value: michael.holley
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MasterVPC
      InternetGatewayId: !Ref InternetGateway

  NATGatewayIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId: !Ref PublicSubnet
      AllocationId: !GetAtt NATGatewayIP.AllocationId

## Public Subnet Route Table ##
  InternetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MasterVPC
      Tags:
        -
          Key: user
          Value: michael.holley
  PublicAccess:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref InternetRouteTable
      GatewayId: !Ref InternetGateway
  InternetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
        RouteTableId: !Ref InternetRouteTable
        SubnetId: !Ref PublicSubnet

## Private Subnet Route Table ##
  InternalRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MasterVPC
      Tags:
        -
          Key: user
          Value: michael.holley
  NATAccess:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref InternalRouteTable
      NatGatewayId: !Ref NATGateway
  InternalRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
        RouteTableId: !Ref InternalRouteTable
        SubnetId: !Ref PrivateSubnet


Outputs:
  VPCID:
    Value: !Ref MasterVPC
    Export:
      Name: master-vpc-id
  PubSubnetID:
    Value: !Ref PublicSubnet
    Export:
      Name: master-vpc-public-subnet-id
  PrivSubnetID:
    Value: !Ref PrivateSubnet
    Export:
      Name: master-vpc-private-subnet-id
  NATGWIP:
    Value: !GetAtt NATGatewayIP.AllocationId
    Export:
      Name: master-vpc-natgateway-ip
  NATGatwayID:
    Value: !Ref NATGateway
    Export:
      Name: master-vpc-natgateway-id
  InternetGatwayID:
    Value: !Ref InternetGateway
    Export:
      Name: master-vpc-internetgateway-id
